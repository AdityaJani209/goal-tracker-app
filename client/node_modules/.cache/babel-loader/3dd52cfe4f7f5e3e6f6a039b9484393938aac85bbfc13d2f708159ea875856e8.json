{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADITYA\\\\Desktop\\\\React\\\\goal-tracker-app\\\\client\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(() => {\n    // Get theme from localStorage or default to light\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'light';\n  });\n  useEffect(() => {\n    // Apply theme to document root\n    const root = document.documentElement;\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n\n    // Save theme to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  const value = {\n    theme,\n    setTheme,\n    toggleTheme,\n    isDark: theme === 'dark'\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s2(ThemeProvider, \"bHCphnhGRG8HzGVlY9B3DMOiXfc=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","theme","setTheme","savedTheme","localStorage","getItem","root","document","documentElement","classList","add","remove","setItem","toggleTheme","prevTheme","value","isDark","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADITYA/Desktop/React/goal-tracker-app/client/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n    const context = useContext(ThemeContext);\r\n    if (!context) {\r\n        throw new Error('useTheme must be used within a ThemeProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    const [theme, setTheme] = useState(() => {\r\n        // Get theme from localStorage or default to light\r\n        const savedTheme = localStorage.getItem('theme');\r\n        return savedTheme || 'light';\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Apply theme to document root\r\n        const root = document.documentElement;\r\n\r\n        if (theme === 'dark') {\r\n            root.classList.add('dark');\r\n        } else {\r\n            root.classList.remove('dark');\r\n        }\r\n\r\n        // Save theme to localStorage\r\n        localStorage.setItem('theme', theme);\r\n    }, [theme]);\r\n\r\n    const toggleTheme = () => {\r\n        setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n    };\r\n\r\n    const value = {\r\n        theme,\r\n        setTheme,\r\n        toggleTheme,\r\n        isDark: theme === 'dark'\r\n    };\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACnE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACrC;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,IAAI,OAAO;EAChC,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACZ;IACA,MAAMiB,IAAI,GAAGC,QAAQ,CAACC,eAAe;IAErC,IAAIP,KAAK,KAAK,MAAM,EAAE;MAClBK,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC9B,CAAC,MAAM;MACHJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACjC;;IAEA;IACAP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;EACxC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACtBX,QAAQ,CAACY,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACnE,CAAC;EAED,MAAMC,KAAK,GAAG;IACVd,KAAK;IACLC,QAAQ;IACRW,WAAW;IACXG,MAAM,EAAEf,KAAK,KAAK;EACtB,CAAC;EAED,oBACIT,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAC/BA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACrB,GAAA,CArCWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}