{"ast":null,"code":"import axios from 'axios';\n\n// API configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle responses and errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API functions\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me'),\n  updateProfile: userData => api.put('/auth/profile', userData),\n  changePassword: passwordData => api.put('/auth/change-password', passwordData)\n};\n\n// Goals API functions\nexport const goalsAPI = {\n  getGoals: (params = {}) => api.get('/goals', {\n    params\n  }),\n  getGoal: id => api.get(`/goals/${id}`),\n  createGoal: goalData => api.post('/goals', goalData),\n  updateGoal: (id, goalData) => api.put(`/goals/${id}`, goalData),\n  deleteGoal: id => api.delete(`/goals/${id}`),\n  getStats: () => api.get('/goals/stats/overview'),\n  // Milestones\n  addMilestone: (goalId, milestoneData) => api.post(`/goals/${goalId}/milestones`, milestoneData),\n  updateMilestone: (goalId, milestoneId, milestoneData) => api.put(`/goals/${goalId}/milestones/${milestoneId}`, milestoneData),\n  deleteMilestone: (goalId, milestoneId) => api.delete(`/goals/${goalId}/milestones/${milestoneId}`),\n  // Notes\n  addNote: (goalId, noteData) => api.post(`/goals/${goalId}/notes`, noteData)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getProfile","get","updateProfile","put","changePassword","passwordData","goalsAPI","getGoals","params","getGoal","id","createGoal","goalData","updateGoal","deleteGoal","delete","getStats","addMilestone","goalId","milestoneData","updateMilestone","milestoneId","deleteMilestone","addNote","noteData"],"sources":["C:/Users/ADITYA/Desktop/React/goal-tracker-app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API configuration\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Handle responses and errors\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('user');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Auth API functions\r\nexport const authAPI = {\r\n    register: (userData) => api.post('/auth/register', userData),\r\n    login: (credentials) => api.post('/auth/login', credentials),\r\n    getProfile: () => api.get('/auth/me'),\r\n    updateProfile: (userData) => api.put('/auth/profile', userData),\r\n    changePassword: (passwordData) => api.put('/auth/change-password', passwordData),\r\n};\r\n\r\n// Goals API functions\r\nexport const goalsAPI = {\r\n    getGoals: (params = {}) => api.get('/goals', { params }),\r\n    getGoal: (id) => api.get(`/goals/${id}`),\r\n    createGoal: (goalData) => api.post('/goals', goalData),\r\n    updateGoal: (id, goalData) => api.put(`/goals/${id}`, goalData),\r\n    deleteGoal: (id) => api.delete(`/goals/${id}`),\r\n    getStats: () => api.get('/goals/stats/overview'),\r\n\r\n    // Milestones\r\n    addMilestone: (goalId, milestoneData) =>\r\n        api.post(`/goals/${goalId}/milestones`, milestoneData),\r\n    updateMilestone: (goalId, milestoneId, milestoneData) =>\r\n        api.put(`/goals/${goalId}/milestones/${milestoneId}`, milestoneData),\r\n    deleteMilestone: (goalId, milestoneId) =>\r\n        api.delete(`/goals/${goalId}/milestones/${milestoneId}`),\r\n\r\n    // Notes\r\n    addNote: (goalId, noteData) =>\r\n        api.post(`/goals/${goalId}/notes`, noteData),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}